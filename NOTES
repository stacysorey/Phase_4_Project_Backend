PROJECT REQUIREMENTS:

-The application must be an HTML, CSS, and JavaScript frontend with a Rails API backend. 

  ✅ Frontend and backend repos created 

-All interactions between the client and the server must be handled asynchronously (AJAX) and use JSON as the communication format.

  
-The JavaScript application must use Object Oriented JavaScript (classes) to encapsulate related data and behavior.

-The domain model served by the Rails backend must include a resource with at least one has-many relationship. For example, if you were building an Instagram clone, you might display a list of photos with associated comments.

-The backend and frontend must collaborate to demonstrate Client-Server Communication. Your application should have at least 3 AJAX calls, covering at least 2 of Create, Read, Update, and Delete (CRUD). Your client-side JavaScript code must use fetch with the appropriate HTTP verb, and your Rails API should use RESTful conventions.

-README.md file describing application

PLANNED PROJECT: 

-Journal Application
    ▶️ rails api controlling journal/entry
        ▶️ journal has many entries
    ▶️ js handling single page web application
    ▶️ js handle frontend localstorage login?

USER FLOW: 

▶️user loads page with header "cozy/simple journal"
      ▶️contents of page hidden behind login 
▶️when user is logged in, window is unhidden
▶️window contains single journal 
▶️user can add entries to this journal
▶️entries have dates next to them 
▶️when user clicks on entry, entry pops up in its own window
      ▶️window in front of hidden page contents 
      ▶️this entry can be exited out of
      ▶️entries can be deleted and edited within popup
      ▶️entry titles can be changed on main page 
▶️logout button in corner 
